# -*- coding: utf-8 -*-
"""Prediksi Harga Saham.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Atk2Zfe5h1JuZGQWqC_ggYCCtYfiKfWv
"""

!pip install yfinance
import yfinance as yf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from keras.models import Sequential
from keras.layers import LSTM, Dense

df = yf.download('BBCA.JK', start='2018-01-01', end='2024-12-31')

df

df = df[['Close']]

df.head()

scaler = MinMaxScaler(feature_range=(0, 1))
scaled_data = scaler.fit_transform(df)

# Function Sliding
def create_dataset(data, time_step=60):
    X, y = [], []
    for i in range(len(data) - time_step):
        X.append(data[i:i+time_step])
        y.append(data[i+time_step])
    return np.array(X), np.array(y)

time_step = 60
X, y = create_dataset(scaled_data, time_step)

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, shuffle=False)

# Bentuk data untuk LSTM (3 dimensi)
X_train = X_train.reshape(X_train.shape[0], X_train.shape[1], 1)
X_test  = X_test.reshape(X_test.shape[0], X_test.shape[1], 1)

model = Sequential()
model.add(LSTM(50, return_sequences=True, input_shape=(60, 1)))
model.add(LSTM(50))
model.add(Dense(1))

model.compile(optimizer='adam', loss='mean_squared_error')
model.fit(X_train, y_train, batch_size=32, epochs=20)

predicted = model.predict(X_test)
predicted = scaler.inverse_transform(predicted)
y_test_inverse = scaler.inverse_transform(y_test.reshape(-1, 1))

dates = df.index[-len(y_test_inverse):]

plt.figure(figsize=(12,6))
plt.plot(dates, y_test_inverse, label='Actual Harga')
plt.plot(dates, predicted, label='Prediksi Harga')
plt.title('Prediksi Harga Saham BBCA')
plt.xlabel('Time')
plt.ylabel('Harga (IDR)')
plt.xticks(rotation=0)  # Optional: miringkan label tanggal
plt.legend()
plt.tight_layout()
plt.show()

